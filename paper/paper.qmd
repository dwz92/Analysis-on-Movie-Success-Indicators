---
title: "Analysis on Movie Success Indicators"
author: 
  - Qi Er (Emma) Teng
thanks: "Code and data are available at: https://github.com/dwz92/Analysis-on-Movie-Success-Indicators."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: html
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(arrow)
library(here)
library(kableExtra)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

## Dataset Introduction

```{r}
#| label: tbl-mov1922-mojo
#| tbl-cap: Top 10 Total Gross Value Release from 2019
#| echo: false

mov1922 <- read_parquet(here::here("data/analysis_data/mov1922.parquet"))

mov1922 |>
  select(release, release_year, release_date, theaters, total_gross) |>
  slice(1:10) |>
  kable(
    colnames = c("Title", "Release Year", "Release Date", "Released Theaters", "Total Gross Value"),
    booktabs = TRUE
  )

```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: tbl-basic-info
#| tbl-cap: First Ten Rows of Basic Information from IMDb
#| echo: false
#| warning: false
#| message: false

titlebasic <- read_parquet(here::here("data/analysis_data/titlebasicraw.parquet"))

titlebasic |>
  select(originalTitle, startYear, genres, tconst) |>
  kable(
    colnames = c("Title", "Release Year", "Genres", "IMDb primary key"),
    booktabs = TRUE
  )
```

Talk way more about it. 

```{r}
#| label: tbl-rating
#| tbl-cap: First Ten Rows of Movie Rating from IMDb
#| echo: false
#| warning: false
#| message: false

titlerate <- read_parquet(here::here("data/analysis_data/titlerateraw.parquet"))

titlerate |>
  select(averageRating, numVotes, tconst) |>
  kable(
    colnames = c("Rating", "Number of Votes", "IMDb primary key"),
    booktabs = TRUE
  )
```

## Variable

```{r}
#| label: tbl-rating-info
#| tbl-cap: First Ten Rows of Movie Rating and Basic Information
#| echo: false
#| warning: false
#| message: false

movcomb <- read_parquet(here::here("data/analysis_data/movcomb.parquet"))

movcomb |>
  select(release, release_year, release_date, genres, averageRating, theaters) |>
  slice(1:10) |>
  kable(
    colnames = c("Title", "Release Year", "Release Date", "Genres", "Rating", "Released Theaters"),
    booktabs = TRUE
  )
```


### Relationship between Movie Success from 2019 to 2022 by Release Theaters

```{r}
#| label: fig-2019-movie-success-theaters
#| fig-cap: Movie Success in 2019 by Release Theaters
#| echo: false
#| warning: false
#| message: false

movcomb <- read_parquet(here::here("data/analysis_data/movcomb.parquet"))

mov2019 <- movcomb

mov2019 <- mov2019 |>
  filter(release_year == 2019)

ggplot(mov2019, aes(x = plot_date, y = averageRating, fill = theaters)) +
  geom_point(shape = 21, size = 4) +
  ggtitle("Movie Success in 2019 by Release Theaters") +
  labs(x = "Month of Release",
       y = "Average Rating",
       fill = "Release Theaters") +
  scale_x_date(date_labels = "%b %d", date_breaks = "1 month") +
  scale_fill_gradient(low = "lightblue", high = "darkred") +
  geom_hline(yintercept = 7, linetype = "dashed", color = "red") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "right")
```


```{r}
#| label: fig-2020-movie-success-theaters
#| fig-cap: Movie Success in 2020 by Release Theaters
#| echo: false
#| warning: false
#| message: false

movcomb <- read_parquet(here::here("data/analysis_data/movcomb.parquet"))

mov2020 <- movcomb

mov2020 <- mov2020 |>
  filter(release_year == 2020)

ggplot(mov2020, aes(x = plot_date, y = averageRating, fill = theaters)) +
  geom_point(shape = 21, size = 4) +
  ggtitle("Movie Success in 2020 by Release Theaters") +
  labs(x = "Month of Release",
       y = "Average Rating",
       fill = "Release Theaters") +
  scale_x_date(date_labels = "%b %d", date_breaks = "1 month") +
  scale_fill_gradient(low = "lightblue", high = "darkred") +
  geom_hline(yintercept = 7, linetype = "dashed", color = "red") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "right")
```

```{r}
#| label: fig-2021-movie-success-theaters
#| fig-cap: Movie Success in 2021 by Release Theaters
#| echo: false
#| warning: false
#| message: false

movcomb <- read_parquet(here::here("data/analysis_data/movcomb.parquet"))

mov2021 <- movcomb

mov2021 <- mov2021 |>
  filter(release_year == 2021)

ggplot(mov2021, aes(x = plot_date, y = averageRating, fill = theaters)) +
  geom_point(shape = 21, size = 4) +
  ggtitle("Movie Success in 2021 by Release Theaters") +
  labs(x = "Month of Release",
       y = "Average Rating",
       fill = "Release Theaters") +
  scale_x_date(date_labels = "%b %d", date_breaks = "1 month") +
  scale_fill_gradient(low = "lightblue", high = "darkred") +
  geom_hline(yintercept = 7, linetype = "dashed", color = "red") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "right")
```


```{r}
#| label: fig-2022-movie-success-theaters
#| fig-cap: Movie Success in 2022 by Release Theaters
#| echo: false
#| warning: false
#| message: false

movcomb <- read_parquet(here::here("data/analysis_data/movcomb.parquet"))

mov2022 <- movcomb

mov2022 <- mov2022 |>
  filter(release_year == 2022)

ggplot(mov2022, aes(x = plot_date, y = averageRating, fill = theaters)) +
  geom_point(shape = 21, size = 4) +
  ggtitle("Movie Success in 2022 by Release Theaters") +
  labs(x = "Month of Release",
       y = "Average Rating",
       fill = "Release Theaters") +
  scale_x_date(date_labels = "%b %d", date_breaks = "1 month") +
  scale_fill_gradient(low = "lightblue", high = "darkred") +
  geom_hline(yintercept = 7, linetype = "dashed", color = "red") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "right")
```


# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.

### Model prediction


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)


```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false


```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]


```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2


```



\newpage


# References


